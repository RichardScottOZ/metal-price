// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Tommy Chu",
            "email": "tommychu2256@gmail.com"
        },
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/i/{metal}": {
            "get": {
                "description": "Get a price of the metal.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a price in USD pre an ounce (metal).",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the whole chemical name or an abbreviated version of a chemical element",
                        "name": "metal",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "400": {
                        "description": "service call",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            }
        },
        "/i/{metal}/{currency}": {
            "get": {
                "description": "Get a price of the metal in a certain currency.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a price in ounces (metal, currency).",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the whole chemical name or an abbreviated version of a chemical element",
                        "name": "metal",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the currency acronym",
                        "name": "currency",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "400": {
                        "description": "service call",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            }
        },
        "/i/{metal}/{currency}/{unit}": {
            "get": {
                "description": "Get a price of the metal in a certain currency and weight unit.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a price (metal, currency, weight unit).",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the whole chemical name or an abbreviated version of a chemical element",
                        "name": "metal",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the currency acronym",
                        "name": "currency",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "weight unit",
                        "name": "unit",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "400": {
                        "description": "service call",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTPError"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Check if the server is running.",
                "produces": [
                    "application/json"
                ],
                "summary": "Check the status.",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.HTTPError": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "error response",
                    "type": "string",
                    "example": "call metal service: material ssilver not found"
                }
            }
        },
        "handlers.Response": {
            "type": "object",
            "properties": {
                "currency": {
                    "description": "money system",
                    "type": "string",
                    "example": "USD"
                },
                "metal": {
                    "description": "metal element",
                    "type": "string",
                    "example": "rhodium"
                },
                "price": {
                    "description": "value",
                    "type": "number",
                    "example": 8200
                },
                "unit": {
                    "description": "weight unit",
                    "type": "string",
                    "example": "oz"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8080",
	BasePath:    "/",
	Schemes:     []string{"http"},
	Title:       "Metal Price API",
	Description: "This API returns the current price of precious metals in different currencies and weight units.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
